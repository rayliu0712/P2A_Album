/*
        if (isCurVideo())
            videoView.setVideoURI(Database.getCurrent().uri);

        GestureDetector gestureDetector = new GestureDetector(cc(),
                new GestureDetector.SimpleOnGestureListener() {
                    @Override
                    public boolean onSingleTapUp(@NonNull MotionEvent e) {
                        if (videoView.isPlaying()) {
                            videoView.pause();
                        } else if (isCurVideo()) {
                            iv.setVisibility(View.GONE);
                            videoView.setVisibility(View.VISIBLE);
                            videoView.start();
                        }
                        return false;
                    }

                    @Override
                    public boolean onFling(@Nullable MotionEvent e1, @NonNull MotionEvent e2, float velocityX, float velocityY) {
                        // 向左滑(+)
                        if (velocityX < 0) {
                            if (Database.iMedia == Database.getAlbum().mediaList.size() - 1)
                                return false;
                            Database.iMedia++;
                        }
                        // 向右滑(-)
                        else {
                            if (Database.iMedia == 0)
                                return false;
                            Database.iMedia--;
                        }

                        iv.setVisibility(View.VISIBLE);
                        videoView.setVisibility(View.GONE);

                        glide();
                        if (isCurVideo())
                            videoView.setVideoURI(Database.getCurrent().uri);

                        return false;
                    }
                });

        ScaleGestureDetector scaleGestureDetector = new ScaleGestureDetector(cc(),
                new ScaleGestureDetector.SimpleOnScaleGestureListener() {
                    @Override
                    public boolean onScale(@NonNull ScaleGestureDetector detector) {
                        scaleFactor *= detector.getScaleFactor();  // 無上限和下限

                        iv.setScaleX(scaleFactor);
                        iv.setScaleY(scaleFactor);

                        return true;  // return false會造成縮放暴衝
                    }
                });

        view.setOnTouchListener(new View.OnTouchListener() {
            @Override
            public boolean onTouch(View v, MotionEvent event) {
                gestureDetector.onTouchEvent(event);
                scaleGestureDetector.onTouchEvent(event);
                return true;
            }
        });
         */